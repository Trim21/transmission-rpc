name: ci

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: ["3.6", "3.7", "3.8"]

    env:
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      - name: Get Latest tools version
        id: get-version
        run: echo "::set-env name=PY::$(python -VV | md5sum | cut -d' ' -f1)"

      - name: Install Poetry
        run: |
          echo "::add-path::$HOME/.local/bin"
          echo "::add-path::$HOME/.poetry/bin"
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - uses: actions/cache@v1
        with:
          path: ~/.local
          key: poetry-2-${{ env.PY }}-${{ hashFiles('poetry.lock') }}

      - name: Install Dependencies
        run: |
          pip install --no-deps -q -r <(poetry export -f requirements.txt --dev -E docs)
          poetry install -E docs
        env:
          POETRY_VIRTUALENVS_CREATE: "false"
          PIP_USER: "1"

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: precommit-2-${{ env.PY }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-2-${{ env.PY }}-

      - name: pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: setup test env
        run: docker-compose -f tests/docker-compose.yaml up -d

      - name: test
        run: pytest --cov=./ --cov-report=xml
        env:
          TR_PORT: 8080
          TR_USER: admin
          TR_PASSWORD: mysecretpassword

      - uses: codecov/codecov-action@v1
        with:
          env_vars: PYTHON
          file: ./coverage.xml
          fail_ci_if_error: true
